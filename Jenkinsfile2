pipeline {
    agent any
    stages {
        stage('clone') {
            steps {
            git credentialsId: '1a890ea9-a7a0-4dc6-b0d1-a86d441f8a67', url: 'https://github.com/naveen-goli/net.git'
        }
        }
   
         stage('Build + SonarQube analysis') {
         steps {
                script {
    def sonarHome = tool 'sonarMSbuild'
     def mshome = tool 'MsBuildLocal'
    withSonarQubeEnv('SonarQube_test') {
      bat (/"${sonarHome}\SonarQube.Scanner.MSBuild.exe" begin \/k:myKey1 \/d:sonar.cs.opencover.reportsPaths="d:\coverage.xml" \/d:sonar.coverage.exclusions="Sample.WiTronix.Web\scripts\ai.0.22.9-build00167.js"/)
      bat(/"${mshome}\msbuild.exe" WebApplication1.sln \/t:rebuild/)
      bat(/OpenCover.Console.exe -target:"mstest.exe" -register -targetargs:"\/testcontainer:Sample.WiTronix.Business.Test\bin\Debug\Sample.WiTronix.Business.Test.dll \/testcontainer:Sample.WiTronix.DataAccess.Test\bin\Debug\Sample.WiTronix.DataAccess.Test.dll" -output:"d:\coverage.xml"/)
      bat (/"${sonarHome}\SonarQube.Scanner.MSBuild.exe" end/)
    }
  }
    }
    }
    }
    
}
